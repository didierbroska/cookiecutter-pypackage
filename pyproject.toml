[tool.poetry]
name = "cookiecutter-pypackage"
version = "0.1.0"
description = "Cookiecutter template for simple Python package"
authors = ["Didier Br√∂ska <didier.broska@gmail.com>"]
license = "MIT"
readme = "README.md"
keywords = [
    "cookiecutter",
    "template",
    "python package"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development",
]

[tool.poetry.dependencies]
python = "^3.6"

[tool.poetry.dev-dependencies]
pytest = "<6.0.0"
tox = "^3.20.1"
cookiecutter = "^1.7.2"
pytest-cookies = "^0.5.1"
watchdog = "^0.10.3"
flake8 = "^3.8.4"
black = "^20.8b1"
PyYAML = "^5.3.1"
mkdocs = "^1.1.2"
safety = "^1.9.0"
isort = "^5.6.4"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = "tests/"

[tool.isort]
profile = "black"
include_trailing_comma="True"
force_grid_wrap="0"
use_parentheses="True"
line_length="79"

[tool.black]
line-length="79"
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | {{cookiecutter.project_dir}}
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py36, py37, py38, py39
skipsdist = true
isolated_build = true

[testenv]
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run safety check
    poetry run pytest tests/
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
