{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}
[tool.poetry]
name = "{{ cookiecutter.project_dir }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
{%- if cookiecutter.open_source_license in license_classifiers %}
license = "{{ cookiecutter.open_source_license }}"
{%- endif %}
repository = "https://github.com/{{ cookiecutter.repo_username }}/{{ cookiecutter.project_slug }}"
documentation = "TODO"
readme = "README.md"
keywords = [
    "{{ cookiecutter.project_slug }}",
    "python package"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
{%- if cookiecutter.open_source_license in license_classifiers %}
    "{{ license_classifiers[cookiecutter.open_source_license] }}",
{%- endif %}
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython"
]
include = [
{%- if cookiecutter.create_author_file == 'y' %}
    "AUTHORS.md",
{%- endif %}
{%- if cookiecutter.open_source_license in license_classifiers %}
    "LICENSE",
{%- endif %}
    "CONTRIBUTING.md",
    "HISTORY.md",
    "README.md"
]

{%- if 'no' not in cookiecutter.command_line_interface|lower %}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.cli:main"
{%- endif %}

[tool.poetry.dependencies]
python = "^3.6"
{%- if cookiecutter.command_line_interface|lower == 'click' %}
Click = "^7.0"
{%- endif %}

[tool.poetry.dev-dependencies]
pytest = "<6.0.0"
pytest-runner = "^5.1"
tox = "^3.20.1"
pytest-cookies = "^0.5.1"
coverage = "^4.5.4"
flake8 = "^3.8.4"
black = "^20.8b1"
mkdocs = "^1.1.2"
safety = "^1.9.0"
isort = "^5.6.4"
mypy = "^0.790"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = "tests/"

[tool.isort]
profile = "black"
src_paths = ["tests", "{{ cookiecutter.project_slug }}"]

[tool.black]
line-length="79"
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py36, py37, py38, py39
skipsdist = true
isolated_build = true

[testenv]
whitelist_externals = poetry
commands =
    pip install poetry
    poetry install -v
    poetry run safety check
    poetry run pytest tests/ {{cookiecutter.project_slug}}/
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
